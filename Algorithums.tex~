% Created 2021-12-11 Sat 23:07
% Intended LaTeX compiler: pdflatex
\documentclass[11pt]{report}
\usepackage[utf8]{inputenc}
\usepackage[T1]{fontenc}
\usepackage{graphicx}
\usepackage{grffile}
\usepackage{longtable}
\usepackage{wrapfig}
\usepackage{rotating}
\usepackage[normalem]{ulem}
\usepackage{amsmath}
\usepackage{textcomp}
\usepackage{amssymb}
\usepackage{capt-of}
\usepackage{hyperref}
\usepackage{minted}
\author{Atharv Sule}
\date{\today}
\title{Algorithms}
\hypersetup{
 pdfauthor={Atharv Sule},
 pdftitle={Algorithms},
 pdfkeywords={},
 pdfsubject={},
 pdfcreator={Emacs 27.2 (Org mode 9.4.4)}, 
 pdflang={English}}
\begin{document}

\maketitle
\tableofcontents


\part{Fundamentals}
\label{sec:orgfebb42c}
\chapter{Summary of topics}
\label{sec:org6be01c8}
\begin{itemize}
\item You can run algorithms to study their properties
\item You can put them to good use immediately in applications
\end{itemize}
\begin{itemize}
\item Programming constructs(building blocks), software libraries( programmming concepts),
and operating systems used to impemet programs make up our
peogramming model
\item To understand this model let us frist talk about statements
\item Here are the different types of statements:
\begin{itemize}
\item Declarations: reate specific type of variables and name w
identifiers
\item Assignments: associate data type with variable
\item Conditionals: provide change in execution flow
\item Loops: more profound change in execution flow, repeat block mutiple times
\item Call and returns relate static methods
\end{itemize}
\item arrays store a sequence of values
\begin{itemize}
\item to initalize an array declare array name and type,create the array
\end{itemize}
initalxe the values
\begin{itemize}
\item Defalt values are set to zero, you initalze them through a for loop
\end{itemize}
\item Static methods: can bel declared without the name of the method, declare class
name
\begin{itemize}
\item Here's an example static method:
\begin{minted}[]{java}
public static squrt(double c)
\end{minted}
\end{itemize}
\item properties of methods
\begin{itemize}
\item Methods can be overloaded
\item methods have a single return value but can have mulitple return statements
\item A method can have side effects
\end{itemize}
\item Recursion: method will call intself
\item External Libraries: imported statements (ex: \texttt{java.lang.*})
\end{itemize}
\section{Subheading}
\label{sec:org97c8483}
\chapter{Data Abstraction}
\label{sec:orga59ed55}
\chapter{Bags, Queues, and Stacks}
\label{sec:orgde4d606}
\chapter{Analysis of Algorithms}
\label{sec:orgd1efab5}
\chapter{Case Study: Union-Find}
\label{sec:orga8ded8d}

\part{Sorting}
\label{sec:orgbf451ee}
\chapter{Elementary Sorts}
\label{sec:org2d1acda}
\chapter{Merge Sort}
\label{sec:org58fdec6}
\end{document}
